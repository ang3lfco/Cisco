/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista_computadora;

import Dtos.ComputadoraDTO;
import Dtos.ReservaDTO;
import excepciones.NegocioException;
import exceptiones.PresentacionException;
import interfaces.IComputadoraNegocio;
import java.awt.event.ActionEvent;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.time.Duration;
import java.time.LocalTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

/**
 *
 * @author ReneEzequiel23
 */
public class frmLiberar extends javax.swing.JFrame {

    IComputadoraNegocio computadoraNegocio;
    Long tiempo, minutos;
    String tipo = "Estudiante";

    /**
     * Creates new form frmLiberar
     */
    public frmLiberar(IComputadoraNegocio computadora) {
        this.computadoraNegocio = computadora;
        initComponents();
        actualizarPantalla();
        iniciarActualizacionCadaMinuto();

    }

    private void actualizarPantalla() {
        ReservaDTO reserva = null;

        try {
            if (computadoraNegocio.reservaPorComputadora(this.obtenerIpDelEquipo()) != null) {
                reserva = this.obtenerReserva(this.obtenerIpDelEquipo());

                lblEquipo.setText("equipo: " + reserva.getComputadora().getNumero());

                lblNombre.setText(reserva.getEstudiante().getNombre() + " " + reserva.getEstudiante().getApellidoPaterno());
                minutos = Duration.between(reserva.getHoraInicio(), LocalTime.now().plusMinutes(reserva.getMinutosSeleccionados())).toMinutes();
                tiempo = minutos;

                lblTiempo.setText(tiempo + " min");

            }

        } catch (PresentacionException ex) {
            Logger.getLogger(frmLiberar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NegocioException ex) {
            Logger.getLogger(frmLiberar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public ReservaDTO obtenerReserva(String ip) {
        ReservaDTO reserva = null;
        try {
            if (computadoraNegocio.reservaPorComputadora(ip) == null) {
                return null;
            }
            reserva = computadoraNegocio.reservaPorComputadora(ip);
        } catch (NegocioException ex) {
            Logger.getLogger(frmComputadora.class.getName()).log(Level.SEVERE, null, ex);
        }
        return reserva;
    }

    public String obtenerIpDelEquipo() throws PresentacionException {
        try {
            InetAddress direccion = InetAddress.getLocalHost();
            String ip = direccion.getHostAddress();

            return ip;
        } catch (UnknownHostException e) {
            throw new PresentacionException("Error. " + e.getMessage());
        }
    }

    private void iniciarActualizacionCadaMinuto() {
        int delay = 60_000; // 60 segundos

        Timer timer = new Timer(delay, (ActionEvent e) -> {
            tiempo = tiempo - 1;
            lblTiempo.setText(tiempo + " min");
            if (tiempo < 0) {
                this.actualizarEstadoEsquipo();
                actualizarReserva();
                this.dispose();
            }

        });

        timer.start();
    }

    public void actualizarEstadoEsquipo() {
        ReservaDTO reserva = null;
        ComputadoraDTO pc = new ComputadoraDTO();
        try {
            reserva = this.obtenerReserva(this.obtenerIpDelEquipo());
        } catch (PresentacionException ex) {
            Logger.getLogger(frmLiberar.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            pc = computadoraNegocio.computadoraPorIpYTipo(reserva.getComputadora().getDireccionIp(), tipo);
            pc.setTipo(tipo);
            pc.setEstado(true);
            computadoraNegocio.editarComputadora(pc);
        } catch (NegocioException ex) {
            Logger.getLogger(frmLiberar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void actualizarReserva() {
        ReservaDTO reserva = null;

        try {
            reserva = this.obtenerReserva(this.obtenerIpDelEquipo());
            LocalTime fin = LocalTime.now();

            Long minUsados = Duration.between(reserva.getHoraInicio(), fin).toMinutes();

            reserva.setHoraFin(fin);

            reserva.setMinutosUsados(minUsados.intValue());

            computadoraNegocio.editarReserva(reserva);
        } catch (PresentacionException ex) {
            Logger.getLogger(frmLiberar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NegocioException ex) {
            Logger.getLogger(frmLiberar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        btnLiberar = new javax.swing.JButton();
        lblEquipo = new javax.swing.JLabel();
        lblTiempo = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("NOMBRE DEL ESTUDIANTE AQUI");

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Desbloquear");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(1, 93, 170));

        jPanel1.setBackground(new java.awt.Color(1, 93, 170));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logo2.png"))); // NOI18N

        lblNombre.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(255, 255, 255));
        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombre.setText("NOMBRE DEL ESTUDIANTE AQUI");

        btnLiberar.setText("Liberar");
        btnLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiberarActionPerformed(evt);
            }
        });

        lblEquipo.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lblEquipo.setForeground(new java.awt.Color(255, 255, 255));
        lblEquipo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEquipo.setText("Equipo: 2");

        lblTiempo.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lblTiempo.setForeground(new java.awt.Color(255, 255, 255));
        lblTiempo.setText("30");
        lblTiempo.setToolTipText("");

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Tiempo restante:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(208, 208, 208)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTiempo))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(226, 226, 226)
                                .addComponent(btnLiberar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEquipo)
                .addGap(10, 10, 10)
                .addComponent(lblNombre)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblTiempo))
                .addGap(18, 18, 18)
                .addComponent(btnLiberar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiberarActionPerformed
        // TODO add your handling code here:
        this.actualizarEstadoEsquipo();
        this.actualizarReserva();
        this.dispose();
    }//GEN-LAST:event_btnLiberarActionPerformed

    /**
     * @param args the command line arguments
     */
////    public static void main(String args[]) {
////        /* Set the Nimbus look and feel */
////        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
////        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
////         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
////         */
////        try {
////            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
////                if ("Nimbus".equals(info.getName())) {
////                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
////                    break;
////                }
////            }
////        } catch (ClassNotFoundException ex) {
////            java.util.logging.Logger.getLogger(frmLiberar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (InstantiationException ex) {
////            java.util.logging.Logger.getLogger(frmLiberar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (IllegalAccessException ex) {
////            java.util.logging.Logger.getLogger(frmLiberar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
////            java.util.logging.Logger.getLogger(frmLiberar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        }
////        //</editor-fold>
////
////        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new frmLiberar().setVisible(true);
////            }
////        });
////    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLiberar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblEquipo;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTiempo;
    // End of variables declaration//GEN-END:variables
}
